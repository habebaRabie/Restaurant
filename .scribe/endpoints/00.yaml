name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/register
    metadata:
      title: 'Display the user registration view.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"message":"this is the user register form view"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      title: 'Handle an incoming user registration request.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: ''
        required: true
        example: delectus
        type: string
      last_name:
        name: last_name
        description: ''
        required: true
        example: dolor
        type: string
      email:
        name: email
        description: ''
        required: true
        example: voluptatem
        type: string
      password:
        name: password
        description: ''
        required: true
        example: laboriosam
        type: string
      password_confirmation:
        name: password_confirmation
        description: ''
        required: true
        example: et
        type: string
    responses:
      -
        status: 200
        content: "{\r\n    \"message\": \"Successfully created your account, just verify it at your email !\",\r\n    \"user\": {\r\n        \"first_name\": \"mariam\",\r\n        \"last_name\": \"elkhashab\",\r\n        \"email\": \"m@hotmail.com\",\r\n        \"updated_at\": \"2021-08-30T13:28:25.000000Z\",\r\n        \"created_at\": \"2021-08-30T13:28:25.000000Z\",\r\n        \"id\": 25\r\n    },\r\n    \"AccessToken:\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC8xMjcuMC4wLjE6ODAwMFwvYXBpXC9yZWdpc3RlciIsImlhdCI6MTYzMDMzMDEwNSwiZXhwIjoxNjMwMzMzNzA1LCJuYmYiOjE2MzAzMzAxMDUsImp0aSI6ImFQV1ExUmZyTDJhZXl2RmEiLCJzdWIiOjI1LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.Gb6pauP14JnqtlmZ4-GIrUJJwY34HGqmwGyXTr35zKI\"\r\n}"
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/login
    metadata:
      title: 'Display the user login view.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"message":"this is the user login form page"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      title: 'Handle an incoming user login request.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: ''
        required: true
        example: ducimus
        type: string
      password:
        name: password
        description: ''
        required: true
        example: et
        type: string
      remember:
        name: remember
        description: ''
        required: false
        example: true
        type: boolean
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/forgot-password
    metadata:
      title: 'Display the password reset link request view.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 201
        content: '{"msg":"This is the password reset link request form"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '57'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/forgot-password
    metadata:
      title: 'Handle an incoming password reset link request.'
      description: |-
        This api handles the form submission
        We will send the password reset link to this user. Once we have attempted
        to send the link, we will examine the response then see the message we
        need to show to the user. Finally, we'll send out a proper response.
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: ''
        required: true
        example: dolorum
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/reset-password/{token}'
    metadata:
      title: 'Display the password reset view.'
      description: 'should contain email, new password & password confirmation fields'
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      token:
        name: token
        description: ''
        required: true
        example: dolores
        type: string
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 201
        content: '{"msg":"This is the reset password form"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '56'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/reset-password
    metadata:
      title: 'Handle an incoming new password request.'
      description: |-
        This api handles the form submission
        Here we will attempt to reset the user's password. If it is successful we
        will update the password on an actual user model and persist it to the
        database. Otherwise we will parse the error and return the response.
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      token:
        name: token
        description: ''
        required: true
        example: qui
        type: mixed
      emai:
        name: emai
        description: ''
        required: true
        example: velit
        type: string
      password:
        name: password
        description: ''
        required: true
        example: nisi
        type: string
      password_confirmation:
        name: password_confirmation
        description: ''
        required: true
        example: et
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/verify-email
    metadata:
      title: 'Display the user email verification prompt.'
      description: ''
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/verify-email/{id}/{hash}'
    metadata:
      title: 'Mark the authenticated user''s email address as verified.'
      description: ''
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the verify email.'
        required: true
        example: eaque
        type: string
      hash:
        name: hash
        description: ''
        required: true
        example: corrupti
        type: string
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/email/verification-notification
    metadata:
      title: 'Send a new email verification notification.'
      description: ''
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/confirm-password
    metadata:
      title: 'Show the confirm password view.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/confirm-password
    metadata:
      title: 'Confirm the user''s password.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      title: 'Destroy an authenticated user session (logout).'
      description: ''
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/admin/login
    metadata:
      title: 'Display the admin login view.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"message":"this is the admin login form page"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '55'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/admin/login
    metadata:
      title: 'Handle an incoming admin login request.'
      description: ''
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: ''
        required: true
        example: aut
        type: string
      password:
        name: password
        description: ''
        required: true
        example: quia
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/admin/admins
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/admins/{id}'
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the admin.'
        required: true
        example: 14
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/admin/register
    metadata:
      title: 'Display the admin registration view.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/admin/register
    metadata:
      title: 'Handle an incoming admin registration request.'
      description: ''
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: ''
        required: true
        example: nam
        type: string
      username:
        name: username
        description: ''
        required: true
        example: occaecati
        type: string
      password:
        name: password
        description: ''
        required: true
        example: vero
        type: string
      password_confirmation:
        name: password_confirmation
        description: ''
        required: true
        example: et
        type: string
      superadmin:
        name: superadmin
        description: ''
        required: false
        example: false
        type: boolean
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/admin/logout
    metadata:
      title: 'Destroy an authenticated admin session (logout).'
      description: ''
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/updateadmin/{id}'
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the updateadmin.'
        required: true
        example: nostrum
        type: string
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/removeadmin/{id}'
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the removeadmin.'
        required: true
        example: minus
        type: string
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/admin/addcategory
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/removecategory/{id}'
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the removecategory.'
        required: true
        example: iste
        type: string
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/updatecategory/{id}'
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the updatecategory.'
        required: true
        example: molestiae
        type: string
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/admin/additem
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/removeitem/{id}'
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the removeitem.'
        required: true
        example: in
        type: string
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/updateitem/{id}'
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the updateitem.'
        required: true
        example: voluptas
        type: string
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/admin/verify-email
    metadata:
      title: 'Display the admin email verification prompt.'
      description: ''
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/verify-email/{id}/{hash}'
    metadata:
      title: 'Mark the authenticated admin''s email address as verified.'
      description: ''
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the verify email.'
        required: true
        example: odio
        type: string
      hash:
        name: hash
        description: ''
        required: true
        example: cum
        type: string
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/admin/email/verification-notification
    metadata:
      title: 'Send a new email verification notification.'
      description: ''
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
