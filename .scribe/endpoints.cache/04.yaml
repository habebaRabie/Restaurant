## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Order Management'
description: |-

  APIs for placing orders and modifying them
endpoints:
  -
    httpMethods:
      - POST
    uri: api/place-order
    metadata:
      title: 'Place order'
      description: 'recieve a cart and place an order with cart info'
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      cartID:
        name: cartID
        description: 'The id of a valid cart to use for the order'
        required: true
        example: 4
        type: integer
      deliveryType:
        name: deliveryType
        description: 'A number between 0-3 to specify the type of delivery from the list [''To Home'', ''To Car'', ''In Restaurant'', ''Take Away''].'
        required: true
        example: 2
        type: integer
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "errNum": 200,
            "msg": "Order placed",
            "order details": {
                "user_id": 3,
                "price": 0,
                "type_of_delivery": "In Restaurant",
                "updated_at": "2021-09-02T13:05:53.000000Z",
                "created_at": "2021-09-02T13:05:53.000000Z",
                "id": 11
            }
          }
        headers: []
        description: '200, success'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/order-history
    metadata:
      title: 'History of the order.'
      description: |-
        This endpoint allows user to see all his order history.

        Enable user to see all his old orders as if his want to take the same order again

        <aside class="notice">when the user want to see his histroy he can see it</aside>
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'to know the user that we will get his data'
        required: true
        example: 17
        type: integer
    responses:
      -
        status: 200
        content: |-
          [
           {
               "price": "54.00",
               "type_of_delivery": "To Home",
               "rating": null,
               "Feedback": null
           },
           {
             "price": "15.00",
             "type_of_delivery": "To Home",
             "rating": null,
             "Feedback": null
           },
           {
             "price": "23.00",
             "type_of_delivery": "In Restaurant",
             "rating": null,
             "Feedback": null
           }
          ]
        headers: []
        description: '200, success'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/feedback
    metadata:
      title: 'Add Feedback to the order.'
      description: |-
        This endpoint allows user to add feedback to his order.

        the user can put a feedback about the order that he paid

        <aside class="notice">The user add a feedback to an order </aside>
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      order_id:
        name: order_id
        description: 'to know the order that will take feedback'
        required: true
        example: 4
        type: integer
      feedback:
        name: feedback
        description: 'that is the feedback that the user want to get to the order'
        required: true
        example: esse
        type: string
    responses:
      -
        status: 200
        content: |-
          {
           "status": true,
           "response": 200
          }
        headers: []
        description: '200, success'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/rating
    metadata:
      title: 'Add Rating to the order.'
      description: |-
        This endpoint allows user to add rate to his order.

        the user can put a rate about the order that he paid

        <aside class="notice">The user add a rate to an order </aside>
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      order_id:
        name: order_id
        description: 'to know the order that will take rate'
        required: true
        example: 10
        type: integer
      rate:
        name: rate
        description: 'that is the feedback that the user want to get to the order'
        required: true
        example: !!float 3
        type: number
    responses:
      -
        status: 200
        content: |-
          {
           "status": true,
           "response": 200
          }
        headers: []
        description: '200, success'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/add-comment
    metadata:
      title: 'Add additional comment'
      description: |-
        This endpoint allows you to add additional comment to the order.

        The user can add additional comment to the order
        Ex: The customer wants the food spicy.
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'required, the id to get the order that we want to add the additional comment to it'
        required: false
        example: 19
        type: integer
      additional_comment:
        name: additional_comment
        description: 'required, the additional comment statment that the user has entered'
        required: false
        example: laudantium
        type: string
    responses:
      -
        status: 200
        content: |-
          {
           "status": true,
           "response": 200,
           "data": The whole order with the additional comment added to it
          }
        headers: []
        description: '200, success'
    responseFields: []
