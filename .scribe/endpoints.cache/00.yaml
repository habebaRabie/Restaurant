## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      title: 'Handle an incoming registration request.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/login
    metadata:
      title: 'Display the login view.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"message":"this is the user login form page"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      title: 'Handle an incoming authentication request.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: ureichel@example.com
        type: string
      password:
        name: password
        description: ''
        required: true
        example: mollitia
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/forgot-password
    metadata:
      title: 'Display the password reset link request view.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 201
        content: '{"msg":"This is the password reset link request form"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '57'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/forgot-password
    metadata:
      title: 'Handle an incoming password reset link request.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/reset-password/{token}'
    metadata:
      title: 'Display the password reset view.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      token:
        name: token
        description: ''
        required: true
        example: et
        type: string
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 201
        content: '{"msg":"This is the reset password form"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '56'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/reset-password
    metadata:
      title: 'Handle an incoming new password request.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/verify-email
    metadata:
      title: 'Display the email verification prompt.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/verify-email/{id}/{hash}'
    metadata:
      title: 'Mark the authenticated user''s email address as verified.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the verify email.'
        required: true
        example: sequi
        type: string
      hash:
        name: hash
        description: ''
        required: true
        example: illo
        type: string
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/email/verification-notification
    metadata:
      title: 'Send a new email verification notification.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/confirm-password
    metadata:
      title: 'Show the confirm password view.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/confirm-password
    metadata:
      title: 'Confirm the user''s password.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      title: 'Destroy an authenticated session.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/admin/login
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"message":"this is the admin login form page"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '55'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/admin/login
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/admins/{id}'
    metadata:
      title: 'getting a certain admin in the database by the id'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the admin'
        required: true
        example: 19
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": "1" ,
            "email":"steve@gmail.com" ,
            "username":"steve" ,
            "superadmin":"1"
            }
        headers: []
        description: '200, the user is a superadmin'
      -
        status: 401
        content: '{"message":"unauthorized"}'
        headers: []
        description: '401, the user isn''t a superadmin'
      -
        status: 404
        content: ''
        headers: []
        description: '404, the admin by the given id is not found'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/admin/register
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/admin/register
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/admin/logout
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/updateadmin/{id}'
    metadata:
      title: 'updating a certain admin with id from the database'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the admin'
        required: true
        example: 9
        type: integer
    queryParameters: []
    bodyParameters:
      superadmin:
        name: superadmin
        description: ''
        required: false
        example: false
        type: boolean
    responses:
      -
        status: 200
        content: ''
        headers: []
        description: '200, the user is a superadmin'
      -
        status: 401
        content: '{"message":"unauthorized"}'
        headers: []
        description: '401, the user isn''t a superadmin'
      -
        status: 404
        content: ''
        headers: []
        description: '404, the admin by the given id was not found'
      -
        status: 422
        content: ''
        headers: []
        description: '422, The request was well formed but was unable to be followed due to a validation error'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/removeadmin/{id}'
    metadata:
      title: 'removing a certain admin with id from the database'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the admin'
        required: true
        example: 18
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: ''
        headers: []
        description: '200, the user is a superadmin'
      -
        status: 401
        content: '{"message":"unauthorized"}'
        headers: []
        description: '401, the user isn''t a superadmin'
      -
        status: 404
        content: ''
        headers: []
        description: '404, the admin with the given id was not found'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/admin/addcategory
    metadata:
      title: 'adding category to the database'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      category_name:
        name: category_name
        description: 'and must be unique'
        required: true
        example: optio
        type: string
    responses:
      -
        status: 200
        content: ''
        headers: []
        description: '200, the user is an admin and the inputs are satisfied with the validation rules'
      -
        status: 401
        content: '{"message":"unauthorized"}'
        headers: []
        description: '401, the user isn''t an admin'
      -
        status: 422
        content: ''
        headers: []
        description: '422, The request was well formed but was unable to be followed due to a validation error'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/removecategory/{id}'
    metadata:
      title: 'removing a certain category with id from the database'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category'
        required: true
        example: 11
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: ''
        headers: []
        description: '200, the user is an admin'
      -
        status: 401
        content: '{"message":"unauthorized"}'
        headers: []
        description: '401, the user isn''t an admin'
      -
        status: 404
        content: ''
        headers: []
        description: '404, the category with the given id is not found'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/updatecategory/{id}'
    metadata:
      title: 'updating a certain category with id in the database'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category'
        required: true
        example: 4
        type: integer
    queryParameters: []
    bodyParameters:
      category_name:
        name: category_name
        description: 'and must be unique'
        required: false
        example: a
        type: string
    responses:
      -
        status: 200
        content: ''
        headers: []
        description: '200, the user is an admin and the inputs are satisfied with the validation rules'
      -
        status: 401
        content: '{"message":"unauthorized"}'
        headers: []
        description: '401, the user isn''t an admin'
      -
        status: 404
        content: ''
        headers: []
        description: '404, the category with the given id was not found'
      -
        status: 422
        content: ''
        headers: []
        description: '422, The request was well formed but was unable to be followed due to a validation error'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/admin/additem
    metadata:
      title: 'adding item to the database'
      description: ''
      authenticated: false
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      item_name:
        name: item_name
        description: 'and must be unique with 40 chrachters at maximum'
        required: true
        example: aut
        type: string
      category_id:
        name: category_id
        description: 'and it must exist'
        required: true
        example: 20
        type: integer
      price:
        name: price
        description: ''
        required: true
        example: voluptatibus
        type: decimal
      offer:
        name: offer
        description: 'if there was an offer_end_date'
        required: true
        example: aliquam
        type: decimal
      offer_end_date:
        name: offer_end_date
        description: 'if there was an offer'
        required: true
        example: aliquid
        type: datetime
      file_path:
        name: file_path
        description: ''
        required: false
        example: null
        type: file
    responses:
      -
        status: 200
        content: ''
        headers: []
        description: '200, the user is an admin and the inputs are satisfied with the validation rules'
      -
        status: 401
        content: '{"message":"unauthorized"}'
        headers: []
        description: '401, the user isn''t an admin'
      -
        status: 422
        content: ''
        headers: []
        description: '422, The request was well formed but was unable to be followed due to a validation error'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/removeitem/{id}'
    metadata:
      title: 'removing a certain item with id from the database'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the item'
        required: true
        example: 20
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: ''
        headers: []
        description: '200, the user is an admin'
      -
        status: 401
        content: '{"message":"unauthorized"}'
        headers: []
        description: '401, the user isn''t an admin'
      -
        status: 404
        content: ''
        headers: []
        description: '404, the item with the given id is not found'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/updateitem/{id}'
    metadata:
      title: 'updating a certain item with id in the database'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the item'
        required: true
        example: 1
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: ''
        headers: []
        description: '200, the user is an admin and the inputs are satisfied with the validation rules'
      -
        status: 401
        content: '{"message":"unauthorized"}'
        headers: []
        description: '401, the user isn''t an admin'
      -
        status: 404
        content: ''
        headers: []
        description: '404, the item with the given id was not found'
      -
        status: 422
        content: ''
        headers: []
        description: '422, The request was well formed but was unable to be followed due to a validation error'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/admin/verify-email
    metadata:
      title: 'Display the email verification prompt.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/verify-email/{id}/{hash}'
    metadata:
      title: 'Mark the authenticated user''s email address as verified.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the verify email.'
        required: true
        example: labore
        type: string
      hash:
        name: hash
        description: ''
        required: true
        example: ea
        type: string
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/admin/email/verification-notification
    metadata:
      title: 'Send a new email verification notification.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/register
    metadata:
      title: 'Display the registration view.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"message":"this is the user register form view"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/admin/admins
    metadata:
      title: 'getting all admins in the database'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            {
            "id": "1" ,
            "email":"steve@gmail.com" ,
            "username":"steve" ,
            "superadmin":"1"
            }
            {
            "id": "2" ,
            "email":"sara@gmail.com" ,
            "username":"sara" ,
            "superadmin":"0"
            }
          }
        headers: []
        description: '200, the user is a superadmin'
      -
        status: 401
        content: '{"message":"unauthorized"}'
        headers: []
        description: '401, the user isn''t a superadmin'
    responseFields: []
